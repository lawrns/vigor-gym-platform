name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vigor_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check code formatting
        run: npm run fmt:check

      - name: Lint code
        run: npm run lint

      - name: Setup test environment
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/vigor_test" >> apps/api/.env.local
          echo "JWT_SECRET=test-jwt-secret-for-ci" >> apps/api/.env.local
          echo "CORS_ORIGINS=http://localhost:7777" >> apps/api/.env.local

      - name: Run database migrations
        run: |
          cd apps/api
          npm run db:generate
          npm run db:migrate

      - name: Seed test data
        run: |
          cd apps/api
          npm run db:seed || true

      - name: Run API unit tests
        run: |
          cd apps/api
          npm test

      - name: Run web unit tests
        run: |
          cd apps/web
          npm test

      - name: Start servers for smoke tests
        run: |
          cd apps/api && npm run dev &
          cd apps/web && npm run dev &
          sleep 10

      - name: Run smoke tests
        run: npm run smoke

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run e2e

  # Accessibility & Mobile Testing
  accessibility-mobile:
    name: Accessibility & Mobile Tests
    runs-on: ubuntu-latest
    needs: build-test

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vigor_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright
        run: cd apps/web && npx playwright install --with-deps

      - name: Setup test environment
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/vigor_test" >> apps/api/.env.local
          echo "JWT_SECRET=test-jwt-secret-for-ci" >> apps/api/.env.local
          echo "CORS_ORIGINS=http://localhost:3005" >> apps/api/.env.local
          echo "DEMO_MODE=1" >> apps/api/.env.local
          echo "SEED_DEMO_OK=1" >> apps/api/.env.local

      - name: Setup database and seed
        run: |
          cd apps/api
          npm run db:generate
          npm run db:migrate
          npm run db:seed

      - name: Start servers
        run: |
          cd apps/api && npm run dev &
          cd apps/web && npm run dev -- --port 3005 &
          sleep 15

      - name: Run accessibility tests
        run: cd apps/web && npx playwright test tests/e2e/audit/simple-a11y.spec.ts --reporter=line

      - name: Run mobile responsiveness tests
        run: cd apps/web && npx playwright test tests/e2e/audit/mobile-responsive.spec.ts --reporter=line

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-mobile-reports
          path: apps/web/test-results/
