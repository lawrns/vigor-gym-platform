openapi: 3.0.3
info:
  title: Vigor Device Check-in API
  description: |
    Production API for gym device registration, authentication, and member check-in operations.
    
    ## Authentication
    - Device registration requires admin user authentication
    - Check-in operations require device JWT authentication
    
    ## Rate Limits
    - Device auth: 5 requests/minute per device
    - Check-in scan: 60 requests/minute per device
    - Check-out: 60 requests/minute per device
    
    ## Business Rules
    - ACTIVE membership: Allow check-in
    - PAST_DUE membership: Allow with warning
    - EXPIRED/CANCELED membership: Deny check-in
    - FROZEN membership: Deny unless override flag
    
  version: 1.0.0
  contact:
    name: Vigor Platform Team
    email: platform@vigor.mx
  license:
    name: Proprietary
    
servers:
  - url: https://api.vigor.mx/v1
    description: Production
  - url: https://staging-api.vigor.mx/v1
    description: Staging
  - url: http://localhost:4002/v1
    description: Development

security:
  - UserAuth: []
  - DeviceAuth: []

paths:
  /devices/register:
    post:
      summary: Register a new device
      description: Register a new kiosk device for a gym location. Requires admin authentication.
      operationId: registerDevice
      security:
        - UserAuth: []
      tags:
        - Devices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceRegisterRequest'
            examples:
              basic:
                summary: Basic device registration
                value:
                  name: "Kiosk Entrada Principal"
                  locationId: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '201':
          description: Device registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRegisterResponse'
              examples:
                success:
                  summary: Successful registration
                  value:
                    device:
                      id: "987fcdeb-51a2-43d1-9f4e-123456789abc"
                      name: "Kiosk Entrada Principal"
                      locationId: "123e4567-e89b-12d3-a456-426614174000"
                      createdAt: "2025-01-16T20:30:00Z"
                    deviceSecret: "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456"
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

  /devices/auth:
    post:
      summary: Authenticate device
      description: Exchange device credentials for JWT token
      operationId: authenticateDevice
      security: []
      tags:
        - Devices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceAuthRequest'
            examples:
              basic:
                summary: Device authentication
                value:
                  deviceId: "987fcdeb-51a2-43d1-9f4e-123456789abc"
                  deviceSecret: "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456"
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthResponse'
              examples:
                success:
                  summary: Successful authentication
                  value:
                    deviceToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    device:
                      id: "987fcdeb-51a2-43d1-9f4e-123456789abc"
                      name: "Kiosk Entrada Principal"
                      companyId: "456e7890-f12b-34c5-d678-901234567890"
                    expiresIn: 86400
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /checkins/scan:
    post:
      summary: Scan member for check-in
      description: |
        Validate member and create visit record. Supports multiple input methods:
        - QR code (JSON format or direct member ID)
        - Manual member ID entry
        - Biometric stub (future)
      operationId: scanMember
      security:
        - DeviceAuth: []
      tags:
        - Check-ins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanRequest'
            examples:
              qr_json:
                summary: QR code with JSON format
                value:
                  qrCode: '{"type":"member","id":"123e4567-e89b-12d3-a456-426614174000"}'
                  gymId: "456e7890-f12b-34c5-d678-901234567890"
              qr_direct:
                summary: QR code with direct member ID
                value:
                  qrCode: "123e4567-e89b-12d3-a456-426614174000"
                  gymId: "456e7890-f12b-34c5-d678-901234567890"
              manual:
                summary: Manual member ID entry
                value:
                  memberId: "123e4567-e89b-12d3-a456-426614174000"
                  gymId: "456e7890-f12b-34c5-d678-901234567890"
      responses:
        '201':
          description: Check-in successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanResponse'
              examples:
                active_member:
                  summary: Active member check-in
                  value:
                    visit:
                      id: "789abcde-f012-3456-7890-123456789abc"
                      checkIn: "2025-01-16T20:30:00Z"
                      member:
                        id: "123e4567-e89b-12d3-a456-426614174000"
                        firstName: "Juan"
                        lastName: "Pérez"
                        email: "juan.perez@example.com"
                      gym:
                        id: "456e7890-f12b-34c5-d678-901234567890"
                        name: "Vigor Gym Centro"
                    state: "OK"
                    message: "Check-in successful"
                past_due_member:
                  summary: Past due member with warning
                  value:
                    visit:
                      id: "789abcde-f012-3456-7890-123456789abc"
                      checkIn: "2025-01-16T20:30:00Z"
                      member:
                        id: "123e4567-e89b-12d3-a456-426614174000"
                        firstName: "María"
                        lastName: "González"
                        email: "maria.gonzalez@example.com"
                      gym:
                        id: "456e7890-f12b-34c5-d678-901234567890"
                        name: "Vigor Gym Centro"
                    state: "PAST_DUE"
                    code: "PAST_DUE"
                    message: "Check-in successful - membership payment overdue"
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Member access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                expired_membership:
                  summary: Expired membership
                  value:
                    message: "No active membership found"
                    code: "NO_ACTIVE_MEMBERSHIP"
                    state: "DENIED"
                frozen_membership:
                  summary: Frozen membership
                  value:
                    message: "Membership is frozen"
                    code: "MEMBERSHIP_FROZEN"
                    state: "DENIED"
        '404':
          description: Member not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                member_not_found:
                  summary: Member not found
                  value:
                    message: "Member not found or access denied"
                    code: "MEMBER_NOT_FOUND"
        '409':
          description: Duplicate check-in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                duplicate_checkin:
                  summary: Already checked in
                  value:
                    message: "Member is already checked in"
                    code: "DUPLICATE_CHECKIN"
                    existingVisit:
                      id: "789abcde-f012-3456-7890-123456789abc"
                      checkIn: "2025-01-16T20:25:00Z"
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /checkins/checkout:
    post:
      summary: Check out member
      description: Close an active visit and calculate duration
      operationId: checkoutMember
      security:
        - DeviceAuth: []
      tags:
        - Check-ins
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'
            examples:
              basic:
                summary: Basic checkout
                value:
                  visitId: "789abcde-f012-3456-7890-123456789abc"
      responses:
        '200':
          description: Check-out successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutResponse'
              examples:
                success:
                  summary: Successful checkout
                  value:
                    visit:
                      id: "789abcde-f012-3456-7890-123456789abc"
                      checkIn: "2025-01-16T20:30:00Z"
                      checkOut: "2025-01-16T22:15:00Z"
                      durationMinutes: 105
                      member:
                        id: "123e4567-e89b-12d3-a456-426614174000"
                        firstName: "Juan"
                        lastName: "Pérez"
                    message: "Check-out successful"
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Visit not found or already checked out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                visit_not_found:
                  summary: Visit not found
                  value:
                    message: "Visit not found or already checked out"
                    code: "VISIT_NOT_FOUND"
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'

  /checkins/{id}:
    get:
      summary: Get visit details
      description: Retrieve detailed information about a specific visit
      operationId: getVisit
      security:
        - DeviceAuth: []
      tags:
        - Check-ins
      parameters:
        - name: id
          in: path
          required: true
          description: Visit ID
          schema:
            type: string
            format: uuid
          example: "789abcde-f012-3456-7890-123456789abc"
      responses:
        '200':
          description: Visit details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitResponse'
              examples:
                active_visit:
                  summary: Active visit
                  value:
                    visit:
                      id: "789abcde-f012-3456-7890-123456789abc"
                      checkIn: "2025-01-16T20:30:00Z"
                      checkOut: null
                      durationMinutes: null
                      member:
                        id: "123e4567-e89b-12d3-a456-426614174000"
                        firstName: "Juan"
                        lastName: "Pérez"
                        email: "juan.perez@example.com"
                      gym:
                        id: "456e7890-f12b-34c5-d678-901234567890"
                        name: "Vigor Gym Centro"
                      device:
                        id: "987fcdeb-51a2-43d1-9f4e-123456789abc"
                        name: "Kiosk Entrada Principal"
                completed_visit:
                  summary: Completed visit
                  value:
                    visit:
                      id: "789abcde-f012-3456-7890-123456789abc"
                      checkIn: "2025-01-16T20:30:00Z"
                      checkOut: "2025-01-16T22:15:00Z"
                      durationMinutes: 105
                      member:
                        id: "123e4567-e89b-12d3-a456-426614174000"
                        firstName: "Juan"
                        lastName: "Pérez"
                        email: "juan.perez@example.com"
                      gym:
                        id: "456e7890-f12b-34c5-d678-901234567890"
                        name: "Vigor Gym Centro"
                      device:
                        id: "987fcdeb-51a2-43d1-9f4e-123456789abc"
                        name: "Kiosk Entrada Principal"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Visit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                visit_not_found:
                  summary: Visit not found
                  value:
                    message: "Visit not found"
                    code: "VISIT_NOT_FOUND"
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    UserAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: User JWT token for admin operations
    DeviceAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Device JWT token for check-in operations

  schemas:
    DeviceRegisterRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: Human-readable device name
          example: "Kiosk Entrada Principal"
        locationId:
          type: string
          format: uuid
          description: Optional gym location ID
          example: "123e4567-e89b-12d3-a456-426614174000"

    DeviceRegisterResponse:
      type: object
      required:
        - device
        - deviceSecret
      properties:
        device:
          $ref: '#/components/schemas/Device'
        deviceSecret:
          type: string
          description: Device secret (returned only once)
          example: "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456"

    DeviceAuthRequest:
      type: object
      required:
        - deviceId
        - deviceSecret
      properties:
        deviceId:
          type: string
          format: uuid
          description: Device ID
          example: "987fcdeb-51a2-43d1-9f4e-123456789abc"
        deviceSecret:
          type: string
          description: Device secret
          example: "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456"

    DeviceAuthResponse:
      type: object
      required:
        - deviceToken
        - device
        - expiresIn
      properties:
        deviceToken:
          type: string
          description: JWT token for device authentication
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        device:
          $ref: '#/components/schemas/DeviceInfo'
        expiresIn:
          type: integer
          description: Token expiration time in seconds
          example: 86400

    ScanRequest:
      type: object
      required:
        - gymId
      properties:
        memberId:
          type: string
          format: uuid
          description: Direct member ID
          example: "123e4567-e89b-12d3-a456-426614174000"
        qrCode:
          type: string
          description: QR code content (JSON or direct member ID)
          example: '{"type":"member","id":"123e4567-e89b-12d3-a456-426614174000"}'
        biometricStub:
          type: string
          description: Biometric identifier (future use)
          example: "bio_123456"
        gymId:
          type: string
          format: uuid
          description: Gym location ID
          example: "456e7890-f12b-34c5-d678-901234567890"
      oneOf:
        - required: [memberId]
        - required: [qrCode]
        - required: [biometricStub]

    ScanResponse:
      type: object
      required:
        - visit
        - state
        - message
      properties:
        visit:
          $ref: '#/components/schemas/Visit'
        state:
          type: string
          enum: [OK, PAST_DUE, DENIED]
          description: Check-in result state
          example: "OK"
        code:
          type: string
          description: Specific result code
          example: "PAST_DUE"
        message:
          type: string
          description: Human-readable message
          example: "Check-in successful"

    CheckoutRequest:
      type: object
      required:
        - visitId
      properties:
        visitId:
          type: string
          format: uuid
          description: Visit ID to check out
          example: "789abcde-f012-3456-7890-123456789abc"

    CheckoutResponse:
      type: object
      required:
        - visit
        - message
      properties:
        visit:
          $ref: '#/components/schemas/CompletedVisit'
        message:
          type: string
          description: Success message
          example: "Check-out successful"

    VisitResponse:
      type: object
      required:
        - visit
      properties:
        visit:
          $ref: '#/components/schemas/VisitDetail'

    Device:
      type: object
      required:
        - id
        - name
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: Device ID
          example: "987fcdeb-51a2-43d1-9f4e-123456789abc"
        name:
          type: string
          description: Device name
          example: "Kiosk Entrada Principal"
        locationId:
          type: string
          format: uuid
          nullable: true
          description: Gym location ID
          example: "123e4567-e89b-12d3-a456-426614174000"
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2025-01-16T20:30:00Z"

    DeviceInfo:
      type: object
      required:
        - id
        - name
        - companyId
      properties:
        id:
          type: string
          format: uuid
          description: Device ID
          example: "987fcdeb-51a2-43d1-9f4e-123456789abc"
        name:
          type: string
          description: Device name
          example: "Kiosk Entrada Principal"
        companyId:
          type: string
          format: uuid
          description: Company ID
          example: "456e7890-f12b-34c5-d678-901234567890"

    Member:
      type: object
      required:
        - id
        - firstName
        - lastName
        - email
      properties:
        id:
          type: string
          format: uuid
          description: Member ID
          example: "123e4567-e89b-12d3-a456-426614174000"
        firstName:
          type: string
          description: First name
          example: "Juan"
        lastName:
          type: string
          description: Last name
          example: "Pérez"
        email:
          type: string
          format: email
          description: Email address
          example: "juan.perez@example.com"

    Gym:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Gym ID
          example: "456e7890-f12b-34c5-d678-901234567890"
        name:
          type: string
          description: Gym name
          example: "Vigor Gym Centro"

    DeviceRef:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          description: Device ID
          example: "987fcdeb-51a2-43d1-9f4e-123456789abc"
        name:
          type: string
          description: Device name
          example: "Kiosk Entrada Principal"

    Visit:
      type: object
      required:
        - id
        - checkIn
        - member
        - gym
      properties:
        id:
          type: string
          format: uuid
          description: Visit ID
          example: "789abcde-f012-3456-7890-123456789abc"
        checkIn:
          type: string
          format: date-time
          description: Check-in timestamp
          example: "2025-01-16T20:30:00Z"
        member:
          $ref: '#/components/schemas/Member'
        gym:
          $ref: '#/components/schemas/Gym'

    CompletedVisit:
      type: object
      required:
        - id
        - checkIn
        - checkOut
        - durationMinutes
        - member
      properties:
        id:
          type: string
          format: uuid
          description: Visit ID
          example: "789abcde-f012-3456-7890-123456789abc"
        checkIn:
          type: string
          format: date-time
          description: Check-in timestamp
          example: "2025-01-16T20:30:00Z"
        checkOut:
          type: string
          format: date-time
          description: Check-out timestamp
          example: "2025-01-16T22:15:00Z"
        durationMinutes:
          type: integer
          description: Visit duration in minutes
          example: 105
        member:
          $ref: '#/components/schemas/Member'

    VisitDetail:
      type: object
      required:
        - id
        - checkIn
        - member
        - gym
        - device
      properties:
        id:
          type: string
          format: uuid
          description: Visit ID
          example: "789abcde-f012-3456-7890-123456789abc"
        checkIn:
          type: string
          format: date-time
          description: Check-in timestamp
          example: "2025-01-16T20:30:00Z"
        checkOut:
          type: string
          format: date-time
          nullable: true
          description: Check-out timestamp
          example: "2025-01-16T22:15:00Z"
        durationMinutes:
          type: integer
          nullable: true
          description: Visit duration in minutes
          example: 105
        member:
          $ref: '#/components/schemas/Member'
        gym:
          $ref: '#/components/schemas/Gym'
        device:
          $ref: '#/components/schemas/DeviceRef'

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message
          example: "Validation error"
        code:
          type: string
          description: Error code
          example: "VALIDATION_ERROR"
        errors:
          type: array
          description: Detailed validation errors
          items:
            type: object
            properties:
              field:
                type: string
                description: Field name
                example: "deviceId"
              message:
                type: string
                description: Field error message
                example: "Invalid UUID format"
        existingVisit:
          type: object
          description: Existing visit information (for duplicate check-ins)
          properties:
            id:
              type: string
              format: uuid
              example: "789abcde-f012-3456-7890-123456789abc"
            checkIn:
              type: string
              format: date-time
              example: "2025-01-16T20:25:00Z"

  responses:
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            validation_error:
              summary: Validation error
              value:
                message: "Validation error"
                code: "VALIDATION_ERROR"
                errors:
                  - field: "deviceId"
                    message: "Invalid UUID format"

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            unauthorized:
              summary: Authentication required
              value:
                message: "Authentication required"
                code: "UNAUTHORIZED"

    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            forbidden:
              summary: Insufficient permissions
              value:
                message: "Insufficient permissions"
                code: "FORBIDDEN"

    RateLimited:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            rate_limited:
              summary: Rate limit exceeded
              value:
                message: "Too many requests, please try again later"
                code: "RATE_LIMITED"

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            internal_error:
              summary: Internal server error
              value:
                message: "Internal server error"
                code: "INTERNAL_ERROR"

tags:
  - name: Devices
    description: Device registration and authentication
  - name: Check-ins
    description: Member check-in and check-out operations
